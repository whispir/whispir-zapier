/* tslint:disable:no-unused-locals */
import { ZObject } from 'zapier-platform-core'
import { ObjectSerializer } from '../model/models';
import { generateInputFields, transformInputData, InputBundle } from './apis';
import { addHeaders } from '../authentication';

// ===============================================
// This file is autogenerated - Please do not edit
// ===============================================

const userCreateInput = [
    {
        key: 'userName',
        required: true,
        label: 'UserName',
        helpText: 'Test',
    },
    {
        key: 'password',
        required: true,
        label: 'Password',
        helpText: 'Test',
    },
    {
        key: 'firstName',
        required: true,
        label: 'FirstName',
        helpText: 'Test',
    },
    {
        key: 'middleName',
        required: false,
        label: 'MiddleName',
        helpText: 'Test',
    },
    {
        key: 'lastName',
        required: true,
        label: 'LastName',
        helpText: 'Test',
    },
    {
        key: 'title',
        required: false,
        label: 'Title',
        helpText: 'Test',
    },
    {
        key: 'nickname',
        required: false,
        label: 'Nickname',
        helpText: 'Test',
    },
    {
        key: 'status',
        required: false,
        label: 'Status',
        helpText: 'Test',
        choices: {
                'ACTIVE': 'ACTIVE',
                'A': 'A',
                'INACTIVE': 'INACTIVE',
                'I': 'I',
                'PENDING': 'PENDING',
                'P': 'P',
                'SUSPENDED': 'SUSPENDED',
                'B': 'B',
                'DELETED': 'DELETED',
                'D': 'D',
        }
    },
    {
        key: 'workMobilePhone1',
        required: false,
        label: 'WorkMobilePhone1',
        helpText: 'Test',
    },
    {
        key: 'workEmailAddress1',
        required: false,
        label: 'WorkEmailAddress1',
        helpText: 'Test',
    },
    {
        key: 'workCountry',
        required: true,
        label: 'WorkCountry',
        helpText: 'Test',
    },
    {
        key: 'timezone',
        required: true,
        label: 'Timezone',
        helpText: 'Test',
    },
    {
        key: 'workMobilePhone2',
        required: false,
        label: 'WorkMobilePhone2',
        helpText: 'Test',
    },
    {
        key: 'workEmailAddress2',
        required: false,
        label: 'WorkEmailAddress2',
        helpText: 'Test',
    },
    {
        key: 'workPhoneAreaCode1',
        required: false,
        label: 'WorkPhoneAreaCode1',
        helpText: 'Test',
    },
    {
        key: 'workPhone1',
        required: false,
        label: 'WorkPhone1',
        helpText: 'Test',
    },
    {
        key: 'workPhoneAreaCode2',
        required: false,
        label: 'WorkPhoneAreaCode2',
        helpText: 'Test',
    },
    {
        key: 'workPhone2',
        required: false,
        label: 'WorkPhone2',
        helpText: 'Test',
    },
    {
        key: 'workFaxAreaCode1',
        required: false,
        label: 'WorkFaxAreaCode1',
        helpText: 'Test',
    },
    {
        key: 'workFax1',
        required: false,
        label: 'WorkFax1',
        helpText: 'Test',
    },
    {
        key: 'workSatellitePhone',
        required: false,
        label: 'WorkSatellitePhone',
        helpText: 'Test',
    },
    {
        key: 'workOtherPhone',
        required: false,
        label: 'WorkOtherPhone',
        helpText: 'Test',
    },
    {
        key: 'workAddress1',
        required: false,
        label: 'WorkAddress1',
        helpText: 'Test',
    },
    {
        key: 'workAddress2',
        required: false,
        label: 'WorkAddress2',
        helpText: 'Test',
    },
    {
        key: 'workSuburb',
        required: false,
        label: 'WorkSuburb',
        helpText: 'Test',
    },
    {
        key: 'workState',
        required: false,
        label: 'WorkState',
        helpText: 'Test',
    },
    {
        key: 'workPostCode',
        required: false,
        label: 'WorkPostCode',
        helpText: 'Test',
    },
    {
        key: 'workPostalAddress1',
        required: false,
        label: 'WorkPostalAddress1',
        helpText: 'Test',
    },
    {
        key: 'workPostalAddress2',
        required: false,
        label: 'WorkPostalAddress2',
        helpText: 'Test',
    },
    {
        key: 'workPostalSuburb',
        required: false,
        label: 'WorkPostalSuburb',
        helpText: 'Test',
    },
    {
        key: 'workPostalState',
        required: false,
        label: 'WorkPostalState',
        helpText: 'Test',
    },
    {
        key: 'workPostalPostCode',
        required: false,
        label: 'WorkPostalPostCode',
        helpText: 'Test',
    },
    {
        key: 'personalEmailAddress1',
        required: false,
        label: 'PersonalEmailAddress1',
        helpText: 'Test',
    },
    {
        key: 'personalEmailAddress2',
        required: false,
        label: 'PersonalEmailAddress2',
        helpText: 'Test',
    },
    {
        key: 'personalAddress1',
        required: false,
        label: 'PersonalAddress1',
        helpText: 'Test',
    },
    {
        key: 'personalAddress2',
        required: false,
        label: 'PersonalAddress2',
        helpText: 'Test',
    },
    {
        key: 'personalSuburb',
        required: false,
        label: 'PersonalSuburb',
        helpText: 'Test',
    },
    {
        key: 'personalState',
        required: false,
        label: 'PersonalState',
        helpText: 'Test',
    },
    {
        key: 'personalPostCode',
        required: false,
        label: 'PersonalPostCode',
        helpText: 'Test',
    },
    {
        key: 'personalCountry',
        required: false,
        label: 'PersonalCountry',
        helpText: 'Test',
    },
    {
        key: 'personalPhoneAreaCode1',
        required: false,
        label: 'PersonalPhoneAreaCode1',
        helpText: 'Test',
    },
    {
        key: 'personalPhone1',
        required: false,
        label: 'PersonalPhone1',
        helpText: 'Test',
    },
    {
        key: 'personalPhoneAreaCode2',
        required: false,
        label: 'PersonalPhoneAreaCode2',
        helpText: 'Test',
    },
    {
        key: 'personalPhone2',
        required: false,
        label: 'PersonalPhone2',
        helpText: 'Test',
    },
    {
        key: 'personalFaxAreaCode1',
        required: false,
        label: 'PersonalFaxAreaCode1',
        helpText: 'Test',
    },
    {
        key: 'personalFax1',
        required: false,
        label: 'PersonalFax1',
        helpText: 'Test',
    },
    {
        key: 'otherPhoneAreaCode1',
        required: false,
        label: 'OtherPhoneAreaCode1',
        helpText: 'Test',
    },
    {
        key: 'otherPhone1',
        required: false,
        label: 'OtherPhone1',
        helpText: 'Test',
    },
    {
        key: 'otherMobile',
        required: false,
        label: 'OtherMobile',
        helpText: 'Test',
    },
    {
        key: 'otherFirstName',
        required: false,
        label: 'OtherFirstName',
        helpText: 'Test',
    },
    {
        key: 'otherLastName',
        required: false,
        label: 'OtherLastName',
        helpText: 'Test',
    },
    {
        key: 'otherTitle',
        required: false,
        label: 'OtherTitle',
        helpText: 'Test',
    },
    {
        key: 'companyName',
        required: false,
        label: 'CompanyName',
        helpText: 'Test',
    },
    {
        key: 'jobTitle',
        required: false,
        label: 'JobTitle',
        helpText: 'Test',
    },
    {
        key: 'division',
        required: false,
        label: 'Division',
        helpText: 'Test',
    },
    {
        key: 'businessUnit',
        required: false,
        label: 'BusinessUnit',
        helpText: 'Test',
    },
    {
        key: 'department',
        required: false,
        label: 'Department',
        helpText: 'Test',
    },
    {
        key: 'teamName1',
        required: false,
        label: 'TeamName1',
        helpText: 'Test',
    },
    {
        key: 'teamName2',
        required: false,
        label: 'TeamName2',
        helpText: 'Test',
    },
    {
        key: 'role1',
        required: false,
        label: 'Role1',
        helpText: 'Test',
    },
    {
        key: 'role2',
        required: false,
        label: 'Role2',
        helpText: 'Test',
    },

] as const;

const userDeleteInput = [
    {
        key: 'userId',
        required: true,
        label: 'userId',
        helpText: 'Test',
    },
] as const;

const userListInput = [
    {
        key: 'fieldname',
        required: false,
        label: 'fieldname',
        helpText: 'Test',
    },
    {
        key: 'sortOrder',
        required: false,
        label: 'sortOrder',
        helpText: 'Test',
        choices: {
            'asc': 'asc',
            'desc': 'desc',
        },
    },
    {
        key: 'sortFields',
        required: false,
        label: 'sortFields',
        helpText: 'Test',
    },
    {
        key: 'limit',
        required: false,
        label: 'limit',
        helpText: 'Test',
    },
    {
        key: 'offset',
        required: false,
        label: 'offset',
        helpText: 'Test',
    },
] as const;

const userRetrieveInput = [
    {
        key: 'userId',
        required: true,
        label: 'userId',
        helpText: 'Test',
    },
] as const;

const userUpdateInput = [
    {
        key: 'userId',
        required: true,
        label: 'userId',
        helpText: 'Test',
    },
    {
        key: 'userName',
        required: true,
        label: 'UserName',
        helpText: 'Test',
    },
    {
        key: 'password',
        required: true,
        label: 'Password',
        helpText: 'Test',
    },
    {
        key: 'firstName',
        required: true,
        label: 'FirstName',
        helpText: 'Test',
    },
    {
        key: 'middleName',
        required: false,
        label: 'MiddleName',
        helpText: 'Test',
    },
    {
        key: 'lastName',
        required: true,
        label: 'LastName',
        helpText: 'Test',
    },
    {
        key: 'title',
        required: false,
        label: 'Title',
        helpText: 'Test',
    },
    {
        key: 'nickname',
        required: false,
        label: 'Nickname',
        helpText: 'Test',
    },
    {
        key: 'status',
        required: false,
        label: 'Status',
        helpText: 'Test',
        choices: {
                'ACTIVE': 'ACTIVE',
                'A': 'A',
                'INACTIVE': 'INACTIVE',
                'I': 'I',
                'PENDING': 'PENDING',
                'P': 'P',
                'SUSPENDED': 'SUSPENDED',
                'B': 'B',
                'DELETED': 'DELETED',
                'D': 'D',
        }
    },
    {
        key: 'workMobilePhone1',
        required: false,
        label: 'WorkMobilePhone1',
        helpText: 'Test',
    },
    {
        key: 'workEmailAddress1',
        required: false,
        label: 'WorkEmailAddress1',
        helpText: 'Test',
    },
    {
        key: 'workCountry',
        required: true,
        label: 'WorkCountry',
        helpText: 'Test',
    },
    {
        key: 'timezone',
        required: true,
        label: 'Timezone',
        helpText: 'Test',
    },
    {
        key: 'workMobilePhone2',
        required: false,
        label: 'WorkMobilePhone2',
        helpText: 'Test',
    },
    {
        key: 'workEmailAddress2',
        required: false,
        label: 'WorkEmailAddress2',
        helpText: 'Test',
    },
    {
        key: 'workPhoneAreaCode1',
        required: false,
        label: 'WorkPhoneAreaCode1',
        helpText: 'Test',
    },
    {
        key: 'workPhone1',
        required: false,
        label: 'WorkPhone1',
        helpText: 'Test',
    },
    {
        key: 'workPhoneAreaCode2',
        required: false,
        label: 'WorkPhoneAreaCode2',
        helpText: 'Test',
    },
    {
        key: 'workPhone2',
        required: false,
        label: 'WorkPhone2',
        helpText: 'Test',
    },
    {
        key: 'workFaxAreaCode1',
        required: false,
        label: 'WorkFaxAreaCode1',
        helpText: 'Test',
    },
    {
        key: 'workFax1',
        required: false,
        label: 'WorkFax1',
        helpText: 'Test',
    },
    {
        key: 'workSatellitePhone',
        required: false,
        label: 'WorkSatellitePhone',
        helpText: 'Test',
    },
    {
        key: 'workOtherPhone',
        required: false,
        label: 'WorkOtherPhone',
        helpText: 'Test',
    },
    {
        key: 'workAddress1',
        required: false,
        label: 'WorkAddress1',
        helpText: 'Test',
    },
    {
        key: 'workAddress2',
        required: false,
        label: 'WorkAddress2',
        helpText: 'Test',
    },
    {
        key: 'workSuburb',
        required: false,
        label: 'WorkSuburb',
        helpText: 'Test',
    },
    {
        key: 'workState',
        required: false,
        label: 'WorkState',
        helpText: 'Test',
    },
    {
        key: 'workPostCode',
        required: false,
        label: 'WorkPostCode',
        helpText: 'Test',
    },
    {
        key: 'workPostalAddress1',
        required: false,
        label: 'WorkPostalAddress1',
        helpText: 'Test',
    },
    {
        key: 'workPostalAddress2',
        required: false,
        label: 'WorkPostalAddress2',
        helpText: 'Test',
    },
    {
        key: 'workPostalSuburb',
        required: false,
        label: 'WorkPostalSuburb',
        helpText: 'Test',
    },
    {
        key: 'workPostalState',
        required: false,
        label: 'WorkPostalState',
        helpText: 'Test',
    },
    {
        key: 'workPostalPostCode',
        required: false,
        label: 'WorkPostalPostCode',
        helpText: 'Test',
    },
    {
        key: 'personalEmailAddress1',
        required: false,
        label: 'PersonalEmailAddress1',
        helpText: 'Test',
    },
    {
        key: 'personalEmailAddress2',
        required: false,
        label: 'PersonalEmailAddress2',
        helpText: 'Test',
    },
    {
        key: 'personalAddress1',
        required: false,
        label: 'PersonalAddress1',
        helpText: 'Test',
    },
    {
        key: 'personalAddress2',
        required: false,
        label: 'PersonalAddress2',
        helpText: 'Test',
    },
    {
        key: 'personalSuburb',
        required: false,
        label: 'PersonalSuburb',
        helpText: 'Test',
    },
    {
        key: 'personalState',
        required: false,
        label: 'PersonalState',
        helpText: 'Test',
    },
    {
        key: 'personalPostCode',
        required: false,
        label: 'PersonalPostCode',
        helpText: 'Test',
    },
    {
        key: 'personalCountry',
        required: false,
        label: 'PersonalCountry',
        helpText: 'Test',
    },
    {
        key: 'personalPhoneAreaCode1',
        required: false,
        label: 'PersonalPhoneAreaCode1',
        helpText: 'Test',
    },
    {
        key: 'personalPhone1',
        required: false,
        label: 'PersonalPhone1',
        helpText: 'Test',
    },
    {
        key: 'personalPhoneAreaCode2',
        required: false,
        label: 'PersonalPhoneAreaCode2',
        helpText: 'Test',
    },
    {
        key: 'personalPhone2',
        required: false,
        label: 'PersonalPhone2',
        helpText: 'Test',
    },
    {
        key: 'personalFaxAreaCode1',
        required: false,
        label: 'PersonalFaxAreaCode1',
        helpText: 'Test',
    },
    {
        key: 'personalFax1',
        required: false,
        label: 'PersonalFax1',
        helpText: 'Test',
    },
    {
        key: 'otherPhoneAreaCode1',
        required: false,
        label: 'OtherPhoneAreaCode1',
        helpText: 'Test',
    },
    {
        key: 'otherPhone1',
        required: false,
        label: 'OtherPhone1',
        helpText: 'Test',
    },
    {
        key: 'otherMobile',
        required: false,
        label: 'OtherMobile',
        helpText: 'Test',
    },
    {
        key: 'otherFirstName',
        required: false,
        label: 'OtherFirstName',
        helpText: 'Test',
    },
    {
        key: 'otherLastName',
        required: false,
        label: 'OtherLastName',
        helpText: 'Test',
    },
    {
        key: 'otherTitle',
        required: false,
        label: 'OtherTitle',
        helpText: 'Test',
    },
    {
        key: 'companyName',
        required: false,
        label: 'CompanyName',
        helpText: 'Test',
    },
    {
        key: 'jobTitle',
        required: false,
        label: 'JobTitle',
        helpText: 'Test',
    },
    {
        key: 'division',
        required: false,
        label: 'Division',
        helpText: 'Test',
    },
    {
        key: 'businessUnit',
        required: false,
        label: 'BusinessUnit',
        helpText: 'Test',
    },
    {
        key: 'department',
        required: false,
        label: 'Department',
        helpText: 'Test',
    },
    {
        key: 'teamName1',
        required: false,
        label: 'TeamName1',
        helpText: 'Test',
    },
    {
        key: 'teamName2',
        required: false,
        label: 'TeamName2',
        helpText: 'Test',
    },
    {
        key: 'role1',
        required: false,
        label: 'Role1',
        helpText: 'Test',
    },
    {
        key: 'role2',
        required: false,
        label: 'Role2',
        helpText: 'Test',
    },

] as const;

const userWorkspaceListInput = [
    {
        key: 'workspaceId',
        required: true,
        label: 'workspaceId',
        helpText: 'Test',
    },
    {
        key: 'sortOrder',
        required: false,
        label: 'sortOrder',
        helpText: 'Test',
        choices: {
            'asc': 'asc',
            'desc': 'desc',
        },
    },
    {
        key: 'sortFields',
        required: false,
        label: 'sortFields',
        helpText: 'Test',
    },
    {
        key: 'limit',
        required: false,
        label: 'limit',
        helpText: 'Test',
    },
    {
        key: 'offset',
        required: false,
        label: 'offset',
        helpText: 'Test',
    },
] as const;

const usersDeleteInput = [
] as const;


export const UsersApi = {
  key: 'users',
  noun: 'Users',
  create: {
    display: {
        label: 'Create a Users',
        description: 'Test'
    },
    operation: {
        inputFields: generateInputFields(userCreateInput),
        perform: async (z: ZObject, bundle: InputBundle<typeof userCreateInput>) => {
            const {
                ...user
            } = transformInputData(bundle.inputData);

            const localVarPath = bundle.authData.host + '/users';
            let localVarQueryParameters: any = {};
            let localVarHeaderParams: any = {};

            let localVarFormParams: any = {};
            localVarHeaderParams['Content-Type'] = 'application/vnd.whispir.user-v1+json';
            localVarHeaderParams['Accept'] = 'application/vnd.whispir.user-v1+json';

            let localVarUseFormData = false;

            const responsePromise = z.request({
                method: 'POST',
                headers: addHeaders(localVarHeaderParams, bundle),
                params: localVarQueryParameters,
                url: localVarPath,
                body: ObjectSerializer.serialize(user, "User")
            });
            return responsePromise
                .then(response => {
                    if (response.status && response.status >= 200 && response.status <= 299) {
                            let body = {};
                            body = ObjectSerializer.deserialize(response.data, "User");
                            
                            // Special case to extract the resource identifier from the `Location` header.
                            const checkLocation = response?.headers?.location?.match(/\/([^\/]+)\/?$/);
                            let id = (checkLocation && checkLocation[1]) ? checkLocation[1] : undefined;
                            
                            return { id, ...body };
                    } else {
                            throw new z.errors.Error(response.data);
                    }
                });
        },
    }
  },
};
